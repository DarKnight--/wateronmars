{% extends "wom_river/base.html_dt" %}


{% block title %}
{{ title_qualify }} River
{% endblock %}


{% block extrahead %}
<script src="/static/js/mousetrap.min.js"></script>
{% endblock %}

{% block content %}
<h1>{{ title_qualify }} sieve</h1>
<small>Press 'n' (next) or 'p' (previous) to browse through the news.</small>
{% if latest_unread_pebbles %}
<div class="accordion" id="accordion2">
{% for reference in latest_unread_pebbles %}
  <div class="accordion-group">
    <div class="accordion-heading"  style="background-color:#eeeeec;">
      <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapse{{forloop.counter0}}">
        {{ reference.title }}
      </a> <small style="padding:5px">{{ reference.pub_date }} <i class="icon-book"></i> {{ reference.source.name}}</small>
    </div>
    <div id="collapse{{forloop.counter0}}" class="accordion-body collapse">
      <div class="accordion-inner">
        <div>
        {{ reference.description|safe }}
        </div>
        <p><a href="{{ reference.url }}"><i class="icon-zoom-in"></i>view on site</a>   
          {% for tag in reference.tags.all %}
          {% if forloop.first %}
          <i class="icon-tags"></i>
          {% endif %}          
          {{ tag }}
          {% if not forloop.last %}
          ,
          {% endif %}
          {% endfor %}
        </p>
      </div>
    </div>
  </div>
  {% endfor %}
</div>
{% endif %}
{% endblock %}

{% block extrascript %}
<script>
currentlyExpandedItem = -1;
trapInProgress = false;

// adapted from http://stackoverflow.com/questions/750486/javascript-closure-inside-loops-simple-practical-example
function createHiddenCallbackFunc(i) {
  return function() { if (!trapInProgress) {currentlyExpandedItem = -1;} };
}

function createShownCallbackFunc(i) {
  return function() { 
    if (!trapInProgress) {
      currentlyExpandedItem = i;
    }
    else
    {
      trapInProgress = false;
    }
  }
}

for(idx=0;idx<{{num_unread_pebbles}};idx+=1)
{
  currentId = 'collapse'+idx.toString()
  $("#"+currentId).on('hiden', createHiddenCallbackFunc(idx));
  $("#"+currentId).on('shown', createShownCallbackFunc(idx));
}

// single keys
Mousetrap.bind('p', function() { 
  if(trapInProgress) {return false;}
  trapInProgress = true;
  var currentIdx = currentlyExpandedItem;
  var itemToCollapse = 'collapse'+currentIdx.toString();
  $('#'+itemToCollapse).collapse('hide');
  if (currentlyExpandedItem <= 0)
  {
    if (currentlyExpandedItem == 0) { currentlyExpandedItem = -1;}
    trapInProgress = false;
  }
  else
  {
    var itemToExpand = 'collapse'+(currentIdx-1).toString();
    $('#'+itemToExpand).collapse('show');
    currentlyExpandedItem = currentIdx - 1;
  }
});

Mousetrap.bind('n', function() { 
  if(trapInProgress) {return false;}
  trapInProgress = true;
  var currentIdx = currentlyExpandedItem;
  var itemToCollapse = 'collapse'+currentIdx.toString();
  $('#'+itemToCollapse).collapse('hide');
  if (currentlyExpandedItem >= {{num_unread_pebbles}} - 1)
  {
    if (currentlyExpandedItem == {{num_unread_pebbles}} - 1) { currentlyExpandedItem = {{num_unread_pebbles}} }
    trapInProgress = false;
  }
  else
  {
    var itemToExpand = 'collapse'+(currentIdx+1).toString();
    $('#'+itemToExpand).collapse('show');
    currentlyExpandedItem = currentIdx + 1;
  }
});
</script>
{% endblock %}
